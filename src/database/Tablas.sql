CREATE DATABASE CIMOVE;
\c CIMOVE;

CREATE TABLE CATEGORIA (
    ID_CATEGORIA SERIAL PRIMARY KEY,
    DESCRIPCION_CATEGORIA VARCHAR(255) NOT NULL,
    ESTADO_CATEGORIA CHAR(1) NOT NULL DEFAULT 'A'
);

CREATE TABLE PRODUCTO (
    ID_PRODUCTO INT PRIMARY KEY,
    ID_CATEGORIA_PRODUCTO INT NOT NULL,
    NOMBRE_PRODUCTO VARCHAR(255) NOT NULL,

    DESCRIPCION_PRODUCTO VARCHAR(500),
    PRECIOVENTAACT_PRODUCTO INT NOT NULL,
    PRECIOVENTAANT_PRODUCTO INT,
    COSTOVENTA_PRODUCTO INT NOT NULL,
    MARGENUTILIDAD_PRODUCTO INT,
    VALORIVA_PRODUCTO DOUBLE PRECISION,
    ESTADO_PRODUCTO CHAR(1) NOT NULL DEFAULT 'A',
    CONSTRAINT FK_PRODUCTO_CATEGORIA FOREIGN KEY (ID_CATEGORIA_PRODUCTO) REFERENCES CATEGORIA(ID_CATEGORIA)
);

CREATE TABLE INVENTARIO (
    ID_INVENTARIO SERIAL PRIMARY KEY,
    ID_PRODUCTO_INVENTARIO INT NOT NULL,
    EXISTENCIA_INVENTARIO INT NOT NULL,
    ESTADO_INVENTARIO CHAR(1) NOT NULL DEFAULT 'A',
    CONSTRAINT FK_INVENTARIO_PRODUCTO FOREIGN KEY (ID_PRODUCTO_INVENTARIO) REFERENCES PRODUCTO(ID_PRODUCTO)
);

CREATE TABLE PAIS (
    ID_PAIS VARCHAR(10) PRIMARY KEY,
    NOMBRE_PAIS VARCHAR(255) NOT NULL,
    ESTADO_PAIS CHAR(1) NOT NULL DEFAULT 'A'
);

CREATE TABLE DEPARTAMENTO (
    ID_DPTO VARCHAR(10) PRIMARY KEY,
    NOMBRE_DPTO VARCHAR(255) NOT NULL,
    ID_PAIS_DPTO VARCHAR(10) NOT NULL,
    ESTADO_DPTO CHAR(1) NOT NULL DEFAULT 'A',
    CONSTRAINT FK_DEPARTAMENTO_PAIS FOREIGN KEY (ID_PAIS_DPTO) REFERENCES PAIS(ID_PAIS)
);

CREATE TABLE CIUDAD (
    ID_CIUDAD VARCHAR(10) PRIMARY KEY,
    NOMBRE_CIUDAD VARCHAR(255) NOT NULL,
    ID_DPTO_CIUDAD VARCHAR(10) NOT NULL,
    ESTADO_CIUDAD CHAR(1) NOT NULL DEFAULT 'A',
    CONSTRAINT FK_CIUDAD_DEPARTAMENTO FOREIGN KEY (ID_DPTO_CIUDAD) REFERENCES DEPARTAMENTO(ID_DPTO)
);

CREATE TABLE SEDE (
    ID_SEDE SERIAL PRIMARY KEY,
    NOMBRE_SEDE VARCHAR(255) NOT NULL,
    ID_CIUDAD_SEDE VARCHAR(10) NOT NULL,
    DIRECCION_SEDE VARCHAR(255) NOT NULL,
    NUMEROEMPLEADOS_SEDE INT NOT NULL,
    TELEFONO_SEDE VARCHAR(20),
    ESTADO_SEDE CHAR(1) NOT NULL DEFAULT 'A',
    CONSTRAINT FK_SEDE_CIUDAD FOREIGN KEY (ID_CIUDAD_SEDE) REFERENCES CIUDAD(ID_CIUDAD)
);

CREATE TABLE INVENTARIOLOCAL (
    ID_INVENTARIOLOCAL SERIAL PRIMARY KEY,
    ID_PRODUCTO_INVENTARIOLOCAL INT NOT NULL,
    ID_SEDE_INVENTARIOLOCAL INT NOT NULL,
    EXISTENCIA_INVENTARIOLOCAL INT NOT NULL,
    STOCKMINIMO_INVENTARIOLOCAL INT,
    STOCKMAXIMO_INVENTARIOLOCAL INT NOT NULL,
    ESTADO_INVENTARIOLOCAL CHAR(1) NOT NULL DEFAULT 'A',
    CONSTRAINT FK_INVENTARIOLOCAL_PRODUCTO FOREIGN KEY (ID_PRODUCTO_INVENTARIOLOCAL) REFERENCES PRODUCTO(ID_PRODUCTO),
    CONSTRAINT FK_INVENTARIOLOCAL_SEDE FOREIGN KEY (ID_SEDE_INVENTARIOLOCAL) REFERENCES SEDE(ID_SEDE)
);

CREATE TABLE TIPODOCUMENTO (
    ID_TIPODOCUMENTO SERIAL PRIMARY KEY,
    DESCRIPCION_TIPODOCUMENTO VARCHAR(255) NOT NULL,
    ESTADO_TIPODOCUMENTO CHAR(1) DEFAULT 'A' NOT NULL
);

CREATE TABLE TIPOCLIENTE (
    ID_TIPOCLIENTE SERIAL PRIMARY KEY,
    DESCRIPCION_TIPOCLIENTE VARCHAR(255) NOT NULL,
    ESTADO_TIPOCLIENTE CHAR(1) DEFAULT 'A' NOT NULL
);

CREATE TABLE CLIENTE (
    ID_CLIENTE INT PRIMARY KEY,
    ID_TIPODOCUMENTO_CLIENTE INT NOT NULL,
    ID_TIPOCLIENTE_CLIENTE INT NOT NULL,
    TELEFONO_CLIENTE VARCHAR(20) NOT NULL,
    ID_SEDE_CLIENTE INT NOT NULL,
    EMAIL_CLIENTE VARCHAR(255),
    DIRECCION_CLIENTE VARCHAR(255),
    BARRIO_CLIENTE VARCHAR(255),
    CODIGOPOSTAL_CLIENTE VARCHAR(20),
    ESTADO_CLIENTE CHAR(1) DEFAULT 'A' NOT NULL,
    FOREIGN KEY (ID_TIPODOCUMENTO_CLIENTE) REFERENCES TIPODOCUMENTO(ID_TIPODOCUMENTO),
    FOREIGN KEY (ID_TIPOCLIENTE_CLIENTE) REFERENCES TIPOCLIENTE(ID_TIPOCLIENTE)
);

CREATE TABLE CLIENTENATURAL (
    ID_CLIENTE INT PRIMARY KEY,
    NOMBRE_CLIENTE VARCHAR(255) NOT NULL,
    APELLIDO_CLIENTE VARCHAR(255) NOT NULL,
    FECHANACIMIENTO_CLIENTE DATE NOT NULL,
    GENERO_CLIENTE VARCHAR(50),
    ESTADO_CLIENTE CHAR(1) DEFAULT 'A' NOT NULL,
    FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTE(ID_CLIENTE)
);

CREATE TABLE CLIENTEJURIDICO (
    ID_CLIENTE INT PRIMARY KEY,
    RAZONSOCIAL_CLIENTE VARCHAR(255) NOT NULL,
    NOMBRECOMERCIAL_CLIENTE VARCHAR(255),
    REPRESENTANTE_CLIENTE VARCHAR(255),
    DIGITOVERIFICACION_CLIENTE INT,
    ESTADO_CLIENTE CHAR(1) DEFAULT 'A' NOT NULL,
    FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTE(ID_CLIENTE)
);

CREATE TABLE TIPOPROVEEDOR (
    ID_TIPOPROVEEDOR SERIAL PRIMARY KEY,
    NOMBRE_TIPOPROVEEDOR VARCHAR(255) NOT NULL,
    ESTADO_TIPOPROVEEDOR CHAR(1) DEFAULT 'A' NOT NULL
);

CREATE TABLE PROVEEDOR (
    ID_PROVEEDOR VARCHAR PRIMARY KEY, --De tipo int pasa a ser VARCHAR
    NOMBRE_PROVEEDOR VARCHAR(255) NOT NULL,
    ID_CIUDAD_PROVEEDOR VARCHAR NOT NULL, --Pasa a ser tipo VARCHAR
    DIRECCION_PROVEEDOR VARCHAR(255),
    TELEFONO_PROVEEDOR VARCHAR(20) NOT NULL,
    EMAIL_PROVEEDOR VARCHAR(255),
    ID_TIPOPROVEEDOR_PROVEEDOR INT NOT NULL,
    REPRESENTANTE_PROVEEDOR VARCHAR(255),
    FECHAREGISTRO_PROVEEDOR DATE NOT NULL,
    SALDO_PROVEEDOR INT DEFAULT 0,
    DIGITOVERIFICACION_PROVEEDOR VARCHAR(1), --Nuevo campo para la verificación del último dígito del nit
    ESTADO_PROVEEDOR CHAR(1) DEFAULT 'A' NOT NULL,
    FOREIGN KEY (ID_TIPOPROVEEDOR_PROVEEDOR) REFERENCES TIPOPROVEEDOR(ID_TIPOPROVEEDOR),
    FOREIGN KEY (ID_CIUDAD_PROVEEDOR) REFERENCES CIUDAD (ID_CIUDAD) --Para utilizar las ciudades registradas en la tabla Ciudad
);

CREATE TABLE SERVICIOTECNICO (
    ID_SERVICIOTECNICO INT PRIMARY KEY,
    ID_SEDE_SERVICIOTECNICO INT NOT NULL,
    ID_PROVEEDOR_SERVICIOTECNICO VARCHAR(50) NOT NULL, -- Cambio de INT a VARCHAR(50)
    ID_CLIENTE_SERVICIOTECNICO INT NOT NULL,
    ID_FACTURA_SERVICIOTECNICO INT NOT NULL,
    NOMBRE_SERVICIOTECNICO VARCHAR(255) NOT NULL,
    DESCRIPCION_SERVICIOTECNICO VARCHAR(500),
    FECHA_SERVICIOTECNICO DATE NOT NULL,
    COSTO_SERVICIOTECNICO INT NOT NULL,
    ESTADO_SERVICIOTECNICO CHAR(1) DEFAULT 'A' NOT NULL,
    FOREIGN KEY (ID_PROVEEDOR_SERVICIOTECNICO) REFERENCES PROVEEDOR(ID_PROVEEDOR),
    FOREIGN KEY (ID_CLIENTE_SERVICIOTECNICO) REFERENCES CLIENTE(ID_CLIENTE)
);


CREATE TABLE PROVEEDORPRODUCTO (
    ID_PROVEEDORPRODUCTO SERIAL PRIMARY KEY,
    ID_PROVEEDOR_PROVEEDORPRODUCTO VARCHAR NOT NULL, --Pasa a ser tipo VARCHAR
    ID_PRODUCTO_PROVEEDORPRODUCTO INT NOT NULL,
    ESTADO_PROVEEDORPRODUCTO CHAR(1) DEFAULT 'A' NOT NULL,
    FOREIGN KEY (ID_PROVEEDOR_PROVEEDORPRODUCTO) REFERENCES PROVEEDOR(ID_PROVEEDOR)
);

CREATE TABLE ORDENCOMPRA (
    ID_ORDENCOMPRA SERIAL PRIMARY KEY,
    ID_PROVEEDOR_ORDENCOMPRA VARCHAR NOT NULL, --Pasa a ser tipo VARCHAR
    FECHA_ORDENCOMPRA DATE NOT NULL,
    TOTAL_ORDENCOMPRA INT NOT NULL,
    ESTADO_FACTURAPROVEEDOR CHAR(1) DEFAULT 'A' NOT NULL,
    FOREIGN KEY (ID_PROVEEDOR_ORDENCOMPRA) REFERENCES PROVEEDOR(ID_PROVEEDOR)
);


CREATE TABLE FACTURAPROVEEDOR (
    ID_FACTURAPROVEEDOR SERIAL PRIMARY KEY,
    ID_ORDENCOMPRA_FACTURAPROVEEDOR INT NOT NULL,
    FECHA_FACTURAPROVEEDOR DATE NOT NULL,
    MONTO_FACTURAPROVEEDOR INT NOT NULL,
    ESTADO_FACTURAPROVEEDOR CHAR(1) DEFAULT 'A' NOT NULL,
    FOREIGN KEY (ID_ORDENCOMPRA_FACTURAPROVEEDOR) REFERENCES ORDENCOMPRA(ID_ORDENCOMPRA)
);

CREATE TABLE DETALLEORDENCOMPRA (
    ID_DETALLEORDENCOMPRA SERIAL PRIMARY KEY,
    ID_ORDENCOMPRA_DETALLEORDENCOMPRA INT NOT NULL,
    ID_PRODUCTO_DETALLEORDENCOMPRA INT NOT NULL,
    CANTIDAD_DETALLEORDENCOMPRA INT NOT NULL,
    PRECIOUNITARIO_DETALLEORDENCOMPRA INT NOT NULL,
    SUBTOTAL_DETALLEORDENCOMPRA INT NOT NULL,
    ESTADO_DETALLEORDENCOMPRA CHAR(1) DEFAULT 'A' NOT NULL,
    FOREIGN KEY (ID_PRODUCTO_DETALLEORDENCOMPRA) REFERENCES PRODUCTO(ID_PRODUCTO),
    FOREIGN KEY (ID_ORDENCOMPRA_DETALLEORDENCOMPRA) REFERENCES ORDENCOMPRA(ID_ORDENCOMPRA)
);

CREATE TABLE DETALLEFACTURAPROVEEDOR (
    ID_DETALLEFACTURAPROVEEDOR SERIAL PRIMARY KEY,
    ID_FACTURAPROVEEDOR_DETALLE INT NOT NULL,
    ID_PRODUCTO_DETALLE INT NOT NULL,
    CANTIDAD_DETALLE INT NOT NULL,
    PRECIOUNITARIO_DETALLE INT NOT NULL,
    SUBTOTAL_DETALLE INT NOT NULL,
    ESTADO_DETALLE CHAR(1) DEFAULT 'A' NOT NULL,
    FOREIGN KEY (ID_FACTURAPROVEEDOR_DETALLE) REFERENCES FACTURAPROVEEDOR(ID_FACTURAPROVEEDOR),
    FOREIGN KEY (ID_PRODUCTO_DETALLE) REFERENCES PRODUCTO(ID_PRODUCTO)
);

CREATE TABLE TIPOMOV (
    ID_TIPOMOV SERIAL PRIMARY KEY,
    NOM_TIPOMOV VARCHAR(50),
    ESTADO_TIPOMOV VARCHAR(20) NOT NULL DEFAULT 'A'
);

CREATE TABLE MOVPRODUCTO (
    ID_MOVIMIENTO SERIAL PRIMARY KEY,
    ID_TIPOMOV_MOVIMIENTO INT NOT NULL,
    ID_PRODUCTO_MOVIMIENTO INT NOT NULL,
    CANTIDAD_MOVIMIENTO INT NOT NULL,
    FECHA_MOVIMIENTO DATE DEFAULT CURRENT_DATE,
    ESTADO_MOVIMIENTO VARCHAR(20),

    ID_SEDE_MOVIMIENTO INT NOT NULL,
    ID_SEDEDESTINO_MOVIMIENTO INT,

    ID_CLIENTE_MOVIMIENTO INT,

    ID_PROVEEDOR_MOVIMIENTO VARCHAR, --Pasa a ser tipo VARCHAR

    CONSTRAINT fk_tipomov_producto FOREIGN KEY (ID_TIPOMOV_MOVIMIENTO) REFERENCES TIPOMOV (ID_TIPOMOV),
    CONSTRAINT fk_producto_movimiento FOREIGN KEY (ID_PRODUCTO_MOVIMIENTO) REFERENCES PRODUCTO (ID_PRODUCTO),
    CONSTRAINT fk_sede_origen FOREIGN KEY (ID_SEDE_MOVIMIENTO) REFERENCES SEDE (ID_SEDE),
    CONSTRAINT fk_sede_destino FOREIGN KEY (ID_SEDEDESTINO_MOVIMIENTO) REFERENCES SEDE (ID_SEDE),
    CONSTRAINT fk_cliente_mov FOREIGN KEY (ID_CLIENTE_MOVIMIENTO) REFERENCES CLIENTE (ID_CLIENTE),
    CONSTRAINT fk_proveedor_mov FOREIGN KEY (ID_PROVEEDOR_MOVIMIENTO) REFERENCES PROVEEDOR (ID_PROVEEDOR)
);

CREATE TABLE TIPOUSUARIO (
    ID_TIPOUSUARIO SERIAL PRIMARY KEY,
    DESCRIPCION_TIPOUSUARIO VARCHAR NOT NULL,
    ESTADO_TIPOUSUARIO CHAR(1) NOT NULL DEFAULT 'A'
);

CREATE TABLE EMPLEADO (
    ID_EMPLEADO INT PRIMARY KEY,
    ID_SEDE_EMPLEADO INT,
    ID_TIPODOCUMENTO_EMPLEADO INT,  -- FK al tipo de documento
    NOMBRE_EMPLEADO VARCHAR NOT NULL,
    TELEFONO_EMPLEADO VARCHAR NOT NULL,
    CARGO_EMPLEADO VARCHAR,
    EMAIL_EMPLEADO VARCHAR,
    ESTADO_EMPLEADO CHAR(1) NOT NULL DEFAULT 'A',
    FOREIGN KEY (ID_SEDE_EMPLEADO) REFERENCES SEDE(ID_SEDE),
    FOREIGN KEY (ID_TIPODOCUMENTO_EMPLEADO) REFERENCES TIPODOCUMENTO(ID_TIPODOCUMENTO)
);

CREATE TABLE USUARIO (
    ID_EMPLEADO_USUARIO INT PRIMARY KEY,
    CONTRASENA_USUARIO VARCHAR,
    EMAIL_USUARIO VARCHAR NOT NULL,
    TELEFONO_USUARIO VARCHAR,
    ID_TIPOUSUARIO_USUARIO INT NOT NULL,
    ESTADO_USUARIO CHAR(1) NOT NULL DEFAULT 'A',
    FOREIGN KEY (ID_EMPLEADO_USUARIO) REFERENCES EMPLEADO(ID_EMPLEADO),
    FOREIGN KEY (ID_TIPOUSUARIO_USUARIO) REFERENCES TIPOUSUARIO(ID_TIPOUSUARIO)
);

CREATE TABLE SALARIO (
    ID_SALARIO SERIAL PRIMARY KEY,
    ID_EMPLEADO_SALARIO INT NOT NULL,
    MONTO_SALARIO INT,
    TIPOPAGO_SALARIO VARCHAR,
    ESTADO_SALARIO CHAR(1) NOT NULL DEFAULT 'A',
    FOREIGN KEY (ID_EMPLEADO_SALARIO) REFERENCES EMPLEADO(ID_EMPLEADO)
);

CREATE TABLE AUDITORIA (
    ID_AUDITORIA SERIAL PRIMARY KEY,
    TABLAAFECTADA_AUDITORIA VARCHAR,
    OPERACION_AUDITORIA VARCHAR,
    FECHAOPERACION_AUDITORIA DATE,
    ID_USUARIO_AUDITORIA INT,
    DETALLESCAMBIO_AUDITORIA VARCHAR,
    ESTADO_AUDITORIA CHAR(1) NOT NULL DEFAULT 'A',
    FOREIGN KEY (ID_USUARIO_AUDITORIA) REFERENCES USUARIO(ID_EMPLEADO_USUARIO)
);

CREATE TABLE FACTURA (
    ID_FACTURA SERIAL PRIMARY KEY,
    FECHA_FACTURA DATE,
    ID_CLIENTE_FACTURA INT,
    TOTAL_FACTURA INT,
    DESCUENTO_FACTURA INT,
    IVA_FACTURA DOUBLE PRECISION,
    SUBTOTAL_FACTURA INT,
    APLICAGARANTIA_FACTURA BOOLEAN,
    FECHAGARANTIA_FACTURA DATE,
    SALDO_FACTURA INT,
    ESTADO_FACTURA CHAR(1) NOT NULL DEFAULT 'A',
    FOREIGN KEY (ID_CLIENTE_FACTURA) REFERENCES CLIENTE(ID_CLIENTE)
);

CREATE TABLE DETALLEFACTURA (
    ID_DETALLEFACTURA SERIAL PRIMARY KEY,
    ID_FACTURA_DETALLEFACTURA INT NOT NULL,
    ID_PRODUCTO_DETALLEFACTURA INT NOT NULL,
    CANTVENDIDA_DETALLEFACTURA INT NOT NULL,
    PRECIOVENTA_DETALLEFACTURA INT,
    VALORIVA_DETALLEFACTURA DOUBLE PRECISION,
    ESTADO_DETALLEFACTURA CHAR(1) NOT NULL DEFAULT 'A',
    FOREIGN KEY (ID_FACTURA_DETALLEFACTURA) REFERENCES FACTURA(ID_FACTURA),
    FOREIGN KEY (ID_PRODUCTO_DETALLEFACTURA) REFERENCES PRODUCTO(ID_PRODUCTO)
);

CREATE TABLE FACTURACIONELECTRONICA (
    ID_FACTURA SERIAL PRIMARY KEY,
    CUFE_FACTURAELECTRONICA VARCHAR,
    FECHA_FACTURAELECTRONICA DATE,
    XML_FACTURAELECTRONICA VARCHAR,
    OBSERVACIONES_FACTURAELECTRONICA INT,
    ESTADO_FACTURAELECTRONICA CHAR(1) NOT NULL DEFAULT 'P',
    FOREIGN KEY (ID_FACTURA) REFERENCES FACTURA(ID_FACTURA)
);

CREATE TABLE TIPOMETODOPAGO (
    ID_TIPOMETODOPAGO SERIAL PRIMARY KEY,
    NOMBRE_TIPOMETODOPAGO VARCHAR NOT NULL,
    COMISION_TIPOMETODOPAGO DOUBLE PRECISION NOT NULL,
    RECEPCION_TIPOMETODOPAGO VARCHAR,
    ESTADO_TIPOMETODOPAGO CHAR(1) NOT NULL DEFAULT 'A'
);

CREATE TABLE METODOPAGO (
    ID_METODOPAGO SERIAL PRIMARY KEY,
    ID_TIPOMETODOPAGO_METODOPAGO INT NOT NULL,
    ID_FACTURA_METODOPAGO INT,
    MONTO_METODOPAGO INT,
    ESTADO_METODOPAGO CHAR(1) NOT NULL DEFAULT 'A',
    FOREIGN KEY (ID_TIPOMETODOPAGO_METODOPAGO) REFERENCES TIPOMETODOPAGO(ID_TIPOMETODOPAGO),
    FOREIGN KEY (ID_FACTURA_METODOPAGO) REFERENCES FACTURA(ID_FACTURA)
);

CREATE TABLE NOTIFICACION (
    ID_NOTIFICACION SERIAL PRIMARY KEY,
    NOMBRE_NOTIFICACION VARCHAR NOT NULL,
    DESCRIPCION_NOTIFICACION VARCHAR NOT NULL,
    URGENCIA_NOTIFICACION CHAR,
    FECHAINICIO_NOTIFICACION DATE NOT NULL,
    FECHAFIN_NOTIFICACION DATE NOT NULL,
    HORAINICIO_NOTIFICACION TIME NOT NULL,
    HORAFIN_NOTIFICACION TIME NOT NULL,
    ESTADO_NOTIFICACION CHAR(1) NOT NULL DEFAULT 'A'
);

CREATE TABLE ABONOFACTURA (
    ID_ABONOFACTURA SERIAL PRIMARY KEY,
    ID_FACTURAPROVEEDOR_ABONOFACTURA INT NOT NULL,
    FECHA_ABONOFACTURA DATE NOT NULL,
    MONTO_ABONOFACTURA INT NOT NULL,
    ESTADO_ABONOFACTURA CHAR(1) DEFAULT 'A' NOT NULL,
    FOREIGN KEY (ID_FACTURAPROVEEDOR_ABONOFACTURA) REFERENCES FACTURAPROVEEDOR(ID_FACTURAPROVEEDOR)
);